<?xml version="1.0"?>
<launch>
	<!-- arguments -->
	<arg name="pcd_file" default="$(find soma_samples)/data/Mirais-3DMap-2021-02.pcd" />
	<arg name="pcd_pub_interval" default="5.0" />
	<arg name="pcd_frame_id" default="map" />
	<!--  -->
	<arg name="nodelet_manager" default="cloud_manager" />
	<!--  -->
	<arg name="gui" default="true" doc="" />
	<!--  -->
	<!-- PCD publish -->
	<!-- publish topic: /raw_points -->
	<include file="$(find soma_samples)/launch/pcd_publish.launch">
		<arg name="file" value="$(arg pcd_file)" />
		<arg name="interval" value="$(arg pcd_pub_interval)" />
		<arg name="frame_id" value="$(arg pcd_frame_id)" />
	</include>
	<!--  -->
	<!-- run nodelet manager -->
	<node name="$(arg nodelet_manager)" pkg="nodelet" type="nodelet" args="manager" output="screen" />
	<!--  -->
	<!-- launch prefiltering nodelets, height clip, common filter -->
	<!-- publish topic: /filtered_points -->
	<include file="$(find soma_samples)/launch/prefiltering.launch">
		<arg name="input_topic" value="/raw_points" />
		<arg name="frame_id" value="$(arg pcd_frame_id)" />
		<arg name="nodelet_manager" value="$(arg nodelet_manager)" />
		<!-- filtering parameters -->
		<arg name="height_min" value="0.0" />
		<arg name="height_max" value="2.5" />
		<arg name="distance_near" value="0.01" />
		<arg name="distance_far" value="25.0" />
		<arg name="downsample_resolution" value="0.03" />
		<arg name="statistical_mean_k" value="10" />
		<arg name="statistical_stddev" value="0.01" />
	</include>
	<!--
	Normal estimation (OMP)
	publish: /filtered_points_with_normal
	-->
	<node name="normal_est" pkg="nodelet" type="nodelet" args="load jsk_pcl/NormalEstimationOMP $(arg nodelet_manager)">
		<remap from="~input" to="/filtered_points" />
		<remap from="~output_with_xyz" to="/filtered_points_with_normal" />
	</node>

	<!--  -->
	<!--
	ground plane detection
	jsk_pcl/MultiPlaneSACSegmentation
	-->
	<node name="multi_plane_sac_segmentation" pkg="nodelet" type="nodelet" args="load jsk_pcl/MultiPlaneSACSegmentation $(arg nodelet_manager)" output="screen">
		<remap from="~input" to="/filtered_points" />
		<remap from="~input_normal" to="/normal_est/output" />
		<param name="use_normal" value="true" />
		<param name="use_clusters" value="false" />
		<param name="use_imu_parallel" value="false" />
		<param name="use_imu_perpendicular" value="false" />
		<param name="outlier_threshold" value="0.4" />
	</node>
	<node name="plane_decomposer" pkg="nodelet" type="nodelet" args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg nodelet_manager)">
		<remap from="~input" to="/normal_est/output_with_xyz" />
		<remap from="~target" to="/multi_plane_sac_segmentation/output_indices" />
	</node>
	<node name="convert_to" pkg="jsk_pcl_ros_utils" type="cluster_point_indices_to_point_indices">
		<remap from="~input" to="/multi_plane_sac_segmentation/output_indices" />
	</node>
	<node name="ie" pkg="nodelet" type="nodelet" args="load jsk_pcl/ExtractIndices $(arg nodelet_manager)">
		<remap from="~input" to="/normal_est/output_with_xyz" />
		<remap from="~indices" to="/convert_to/output" />
		<param name="negative" value="true" />
		<param name="approximate_sync" value="true" />
	</node>
	<!--  -->
	<!-- Run point cloud segmentation nodes -->
	<!--
	<node name="segmentation" pkg="nodelet" type="nodelet" args="load jsk_pcl/RegionGrowingSegmentation $(arg nodelet_manager)">
	<remap from="~input" to="/normal_est/output_with_xyz" />
	</node>
	<node name="decomposer" pkg="nodelet" type="nodelet" args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg nodelet_manager)">
	<remap from="~input" to="/normal_est/output_with_xyz" />
	<remap from="~target" to="/segmentation/output" />
	</node>
	-->
	<!--
	<node name="pcd_save" pkg="nodelet" type="nodelet" args="load soma_tools/ClusterPointIndicesToPCDs $(arg nodelet_manager)" output="screen">
	<remap from="input_points" to="/normal_est/output_with_xyz" />
	<remap from="target_indices" to="/segmentation/output" />
	</node>
	-->
	<!--  -->
	<!--  -->
	<!--  -->
	<node if="$(arg gui)" name="visualizer" pkg="rviz" type="rviz" args="-d $(find soma_samples)/rviz/3dmap_analyze.rviz" />
</launch>
